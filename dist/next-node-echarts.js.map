{"version":3,"sources":["next-node-echarts.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-node-echarts.js","sourcesContent":["(function() {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('next-js-core2');\n  var createCanvas = require('canvas').createCanvas;\n  var ERR_MSG = 'Echarts must be import!';\n  var DEFAULT_OPTIONS = {\n    width: 1000,\n    height: 500,\n    pixelRatio: 2,\n    option: {},\n    echarts: null\n  };\n\n  var NxNodeEcharts = nx.declare('nx.NodeEcharts', {\n    methods: {\n      init: function(inOptions) {\n        var options = nx.mix(null, DEFAULT_OPTIONS, inOptions);\n        var echarts = options.echarts;\n        if (!echarts) {\n          nx.error(ERR_MSG);\n        }\n        echarts.setCanvasCreator(createCanvas);\n        this.echarts = echarts;\n        this.canvas = createCanvas(options.width, options.height);\n        this.chart = echarts.init(this.canvas, null, {\n          devicePixelRatio: options.pixelRatio\n        });\n        this.chart.setOption(options.option);\n      },\n      toBuffer: function() {\n        return this.chart.getDom().toBuffer();\n      },\n      getDataURL: function(inType) {\n        var buff = this.toBuffer();\n        var type = (inType || 'png').toLowerCase();\n        return 'data:image/' + type + ';base64,' + Buffer.from(buff).toString('base64');\n      },\n      dispose: function() {\n        return this.chart.dispose();\n      }\n    }\n  });\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NxNodeEcharts;\n  }\n})();\n"]}